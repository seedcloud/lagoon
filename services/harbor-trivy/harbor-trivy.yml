apiVersion: v1
kind: Template
metadata:
  name: harbor-trivy-template
  annotations:
    description: "A template for generating Harbor's trivy scanner service"
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOON_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME} # harbor-trivy
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    ports:
      - name: api-server
        port: 8080
    selector:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${SERVICE_NAME} # harbor-trivy
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  type: Opaque
  data:
    redisURL: cmVkaXM6Ly9oYXJib3ItcmVkaXM6NjM3OS81  # redis://harbor-redis:6379/5
    gitHubToken: ""
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: ${SERVICE_NAME} # harbor-trivy
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: ${SERVICE_NAME}
        branch: ${SAFE_BRANCH}
        project: ${SAFE_PROJECT}
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        containers:
        - name: ${SERVICE_NAME} # harbor-trivy
          image: ${SERVICE_IMAGE}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /probe/healthy
              port: api-server
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /probe/ready
              port: api-server
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          envFrom:
          - configMapRef:
              name: "lagoon-env"
          env:
          - name: "SCANNER_LOG_LEVEL"
            value: "error"
          - name: "SCANNER_TRIVY_CACHE_DIR"
            value: "/home/scanner/.cache/trivy"
          - name: "SCANNER_TRIVY_REPORTS_DIR"
            value: "/home/scanner/.cache/reports"
          - name: "SCANNER_TRIVY_DEBUG_MODE"
            value: "false"
          - name: "SCANNER_TRIVY_VULN_TYPE"
            value: "os,library"
          - name: "SCANNER_TRIVY_GITHUB_TOKEN"
            valueFrom:
              secretKeyRef:
                name: harbor-trivy
                key: gitHubToken
          - name: "SCANNER_TRIVY_SEVERITY"
            value: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          - name: "SCANNER_TRIVY_IGNORE_UNFIXED"
            value: "false"
          - name: "SCANNER_TRIVY_SKIP_UPDATE"
            value: "false"
          - name: "SCANNER_STORE_REDIS_URL"
            valueFrom:
              secretKeyRef:
                name: harbor-trivy
                key: redisURL
          - name: "SCANNER_JOB_QUEUE_REDIS_URL"
            valueFrom:
              secretKeyRef:
                name: harbor-trivy
                key: redisURL
          ports:
          - name: api-server
            containerPort: 8080
          volumeMounts:
          - mountPath: /tmp
            name: tmp-data
          - mountPath: /home/scanner/.cache
            name: data
        volumes:
        - name: tmp-data
          emptyDir: {}
    volumeClaimTemplates:
      - metadata:
          name: data
          labels:
            service: ${SERVICE_NAME}
            branch: ${SAFE_BRANCH}
            project: ${SAFE_PROJECT}
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: "5Gi"